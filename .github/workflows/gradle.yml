name: rhkr8521 - CICD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build-docker-image:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Build with Gradle
      uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
      with:
        arguments: clean bootJar

    - name: docker image build
      run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/mapping_backend .

    - name: docker login
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: docker Hub push
      run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/mapping_backend

  run-docker-image-on-mapping-server:
    needs: build-docker-image
    runs-on: self-hosted

    steps:
      - name: docker pull
        run: echo "${{ secrets.DOCKERHUB_PASSWORD }}" | sudo -S docker pull ${{ secrets.DOCKERHUB_USERNAME }}/mapping_backend

      - name: docker stop and remove container
        run: |
          echo "${{ secrets.DOCKERHUB_PASSWORD }}" | sudo -S -v docker stop github-actions-demo || true
          echo "${{ secrets.DOCKERHUB_PASSWORD }}" | sudo -S -v docker rm github-actions-demo || true

      - name: docker run new container
        run: |
          echo "${{ secrets.DOCKERHUB_PASSWORD }}" | sudo -S docker run --name github-actions-demo --rm -d \
          -p 8080:8080 \
          -e DB_ADDR=${{ secrets.DB_ADDR }} \
          -e DB_PORT=${{ secrets.DB_PORT }} \
          -e DB_NAME=${{ secrets.DB_NAME }} \
          -e DB_USER=${{ secrets.DB_USER }} \
          -e DB_PW=${{ secrets.DB_PW }} \
          -e SERVER_IMGSAVE_ADDR=${{ secrets.SERVER_IMGSAVE_ADDR }} \
          -e SERVER_DOMAIN=${{ secrets.SERVER_DOMAIN }} \
          -e SERVER_B_PORT=${{ secrets.SERVER_B_PORT }} \
          -v /home/rhkr8521/mapping/images:/app/images \
          ${{ secrets.DOCKERHUB_USERNAME }}/mapping_backend

      - name: delete old docker image
        run: echo "${{ secrets.DOCKERHUB_PASSWORD }}" | sudo -S docker system prune -f
